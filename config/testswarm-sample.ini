[TESTSWARM]
;
;  Copy this file to the root directory (parent of ./config/)
;  and name it `testswarm.ini`
;
; @since 0.1.0
; @package TestSwarm
;

[general]
;;;;;;;;;;;;;;;;;;;;;;
;  General settings  ;
;;;;;;;;;;;;;;;;;;;;;;
; NOTE: Settings under section "general" are publicly retreivable
; through api.php?action=info.
;

;timezone=UTC
;  Timezone that things should be displayed in.
;  See php.net/date_default_timezone_set


[database]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Database settings (MySQL)  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  A persistent MySQL connection will be established to
;  this host with the following settings.
;  The database has to be set up before the application
;  can be used. Refer to the README file for more information.
;

host = "localhost"
;  Hostname of MySQL server to connect to

database = "testswarm"
;  Name of the database to use

username = "root"
;  Username to connect with to the above host
;  must have permission on the above database to:
;  SELECT, INSERT, UPDATE and DELETE.

password = "root"
;  Password for the above username


[custom_msg]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Customizable interface messages  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  The _html or _text suffix indicates whether it is outputted
;  as-is or escaped. Be sure to escape " such as in html attribute values.
;

;home_intro_html = "Welcome to $1! More information about what TestSwarm is and how it works can be found on <a href=\"//github.com/jquery/testswarm/wiki\">the TestSwarm wiki</a>"
;  Message outputted on the HomePage, wrapped in <blockquote><p/></blockquote>.
;  $1 is replaced with an html-escaped value of conf[web][title].


[web]
;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Settings for the web   ;
;  front-end (index.php)  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;
; NOTE: Settings under section "web" are publicly retreivable
; through api.php?action=info.
;

;contextpath = "/"
;  The context path is the prefix (starting at the domain name root)
;  used to access resources from the browser.
;  Make sure to update .htaccess with the correct RewriteBase.
;  Should be the absolute path from the root (e.g. "/", or "/testswarm/").
;  May contain a hostname (e.g. "https://example.org/swarm/" or "//example.org/")
;  Should include a trailing slash for subdirectories.

;title = ""
;  Name for this Test Swarm instance.
;  Will be used in the header of the site.
;  Defaults to just "Test Swarm".

;ajax_update_interval = 5
;  Interval in number of seconds to use on the job pages
;  where the table data is updated in real-time.


[client]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  Settings for browser client  ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; NOTE: Settings under section "client" are publicly retreivable
; through api.php?action=info.
;
; NOTE: These are exported on index.php?action=run
; and the test runner client refreshes these values through
; api.php?action=getrun.
;

;cooldown_sleep = 2
;  After a run has been completed, wait this number of seconds before
;  requesting the next run from the server.

;nonewruns_sleep = 30
;  If server request for next run gave no results "No new tests to run", wait
;  this number of seconds before trying again.

;run_timeout = 180
;  Number of seconds a run may take to run.
;  After this time the run-iframe will be cancelled and a timeout-report
;  is submitted to action=saverun instead.

;savereq_timeout = 10
;  Number of seconds the AJAX request to action=saverun on RunPage may take
;  until it is aborted.

;saveretry_max = 4
;  If the AJAX request to action=saverun on RunPage fails entirely (e.g.
;  times out, 404 Not Found, 500 Internal Server Error, ..) it will retry
;  up to this number of times before reaching out to the last resort (restarting
;  the browser window). When in doubt, keep a higher rather than a lower value.
;  Because it's better to have a client in a still-alive page retrying a few
;  times until the server is back on, then refreshing too soon when the RunPage
;  doesn't even render (which effectively permanently disconnects the client).

;saveretry_sleep = 15
;  Number of seconds to wait between retries for action=saverun.

;require_run_token = 0
;  Whether joining the swarm to run tests requires a token or not. By default
;  anyone can join the swarm without needing a token or a registered account.
;  When enabling this, run the setRunPassword.php script to generate a token
;  that will then have to be passed as the "runToken" for GetrunAction,
;  SaverunAction and on RunPage.

;refresh_control = 0
;  Increasing this number will force all connected clients to refresh the
;  window. Use this sparingly as a client will not be able to automatically
;  reconnect if the refresh fails for whatever reason. When using AJAX to
;  request new runs, there is a fallback, but for a complete refresh there is
;  no catch.


[storage]
;;;;;;;;;;;;;
;  Storage  ;
;;;;;;;;;;;;;

;cacheDir = "$1/cache"
;  Which directory to use for caching. Should be readable/writeable and
;  not executable from the web. Either outside the web root or protected
;  by an htaccess restriction.
;  As convenience "$1" will be replaced with $swarmInstallDir.


[debug]
;;;;;;;;;;;;;;;
;  Debugging  ;
;;;;;;;;;;;;;;;

;show_exception_details = 0
;  Wether to show exceptions in HTML.
;  By default Uncaught exceptions will be handled by PHP and cause a PHP Fatal error.
;  Depending on your server settings these usually result in the request being
;  aborted and the browser is given a HTTP 500 Internal Server Error.
;  Settings this to 1 will instead catch them and show them in HTML

;php_error_reporting = 0
;  If enabled, php errors of all levels will be shown

;db_log_queries = 0
;  If enabled, the Database class will log all queries and the Page class will
;  output them at the bottom of the HTML. In order to use this for Api responses,
;  use api?format=debug which uses a Page as container. Be careful not to use this
;  on a production site as this will show raw queries in HTML and could potentially
;  contain information that users should not be able to see.
